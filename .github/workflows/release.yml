name: Build and Release Python exe

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out source code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Wine and prerequisites from WineHQ
      run: |
        # Add WineHQ repository for the latest stable release
        sudo dpkg --add-architecture i386
        sudo mkdir -pm755 /etc/apt/keyrings
        wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
        wget -NP /etc/apt/sources.list.d https://dl.winehq.org/wine-builds/ubuntu/dists/noble/winehq-noble.sources
        
        # Update and install WineHQ stable
        sudo apt-get update
        sudo apt-get install -y --install-recommends winehq-stable

        # Install helper tools (7zip and related)
        sudo apt-get install -y p7zip-full

        # Confirm Wine installation
        wine --version

    - name: Install PyInstaller in Wine environment
      run: |
        # Setup Wine environment
        WINEARCH=win32 WINEPREFIX=/tmp/wine32 wineboot --init

        # Install Python and PyInstaller in Wine
        wget https://www.python.org/ftp/python/3.10.9/python-3.10.9.exe -O /tmp/python.exe
        WINEPREFIX=/tmp/wine32 wine /tmp/python.exe /quiet InstallAllUsers=1 PrependPath=1

        # Verify Python installation in Wine
        WINEPREFIX=/tmp/wine32 wine python --version

        # Install PyInstaller
        WINEPREFIX=/tmp/wine32 wine python -m pip install --upgrade pip
        WINEPREFIX=/tmp/wine32 wine python -m pip install pyinstaller

    - name: Build Python script to exe
      run: |
        # Use Wine to build the Windows executable
        WINEPREFIX=/tmp/wine32 wine pyinstaller --onefile convert.py

    - name: Download FFmpeg and FFprobe binaries for Windows
      run: |
        # Download FFmpeg and FFprobe Windows executables
        wget -O ffmpeg.zip https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip
        
        # Extract the required binaries
        mkdir -p ffmpeg
        unzip ffmpeg.zip -d ffmpeg
        
        # Move ffmpeg.exe and ffprobe.exe to the working directory
        mv ffmpeg/**/ffmpeg.exe .
        mv ffmpeg/**/ffprobe.exe .

    - name: Prepare for release (zip the package)
      run: |
        # Create a release directory and move files into it
        mkdir -p release
        mv dist/convert.exe release/
        mv ffmpeg.exe release/
        mv ffprobe.exe release/

        # Compress release files into a ZIP archive
        7z a -tzip release.zip ./release/*

    - name: Upload Release to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: release.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}